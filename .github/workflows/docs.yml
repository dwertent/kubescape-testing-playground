name: Docs Site

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [released]
jobs:
  fetch-latest-tag:
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.get_latest_tag.outputs.latest_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch all tags
        run: git fetch --tags

      - name: Get the latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git tag -l | sort -V | tail -n 1)
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV

  build:
    runs-on: ubuntu-latest
    needs: fetch-latest-tag
    permissions:
      contents: write
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Docs Deploy
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "noreply@github.com"
 
      - name: Install docs dependencies
        working-directory: doc-site
        run: pip install -r requirements.txt
      
      - name: print latest tag
        run: echo ${{ needs.fetch-latest-tag.outputs.latest_tag }}
      
      - name: print action
        run: echo ${{ github.event.action }}

      - name: Update doc site for release
        if: github.event.action == 'released' && github.ref_name == needs.fetch-latest-tag.outputs.latest_tag
        working-directory: doc-site
        run: mike deploy ${{ github.event.release.tag_name }} --push

      - name: Update doc site for latest release
        if: github.event.action == 'released' && github.ref_name == needs.fetch-latest-tag.outputs.latest_tag
        working-directory: doc-site
        run: mike deploy ${{ github.event.release.tag_name }} latest -u --push

      - name: Update doc site for `main` branch
        if: ${{ github.event_name == 'push' }}
        working-directory: doc-site
        run: mike deploy head --push

      - name: Test building the doc site but do not deploy it
        if: ${{ github.event_name == 'pull_request' }}
        working-directory: doc-site
        run: mkdocs build
